<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AnonymousUser" xml:space="preserve">
    <value>anonymous</value>
  </data>
  <data name="APIExceptionWithDeveloperMessage" xml:space="preserve">
    <value>API Error: {0}, Status: {1}, Message: {2}, Developer Message: {3}, Time: {4}</value>
  </data>
  <data name="APIExceptionWithoutDeveloperMessage" xml:space="preserve">
    <value>API Error: {0}, Status: {1}, Message: {2}, Time: {3}</value>
  </data>
  <data name="BadRequestException" xml:space="preserve">
    <value>{0}, Invalid Parameter: {1}</value>
  </data>
  <data name="BrokerAuthenticationFailureExceptionMsg" xml:space="preserve">
    <value>"Failed to authenticate the broker with given Username and password. " +
                                                                   "Please check the Data Ingress SDK log file for more details.";</value>
  </data>
  <data name="BrokerUnavailableStringMsg" xml:space="preserve">
    <value>"Failed to open Message broker connection. " +
                                                             "The server broker may be down." +
                                                             "Please check the DIS SDK log file for more details.";</value>
  </data>
  <data name="DuplicateThumbprintFound" xml:space="preserve">
    <value>"Multiple certificate found with same thumbprint, please validate store before continuing"</value>
  </data>
  <data name="EmptyRmqConnectionStringMsg" xml:space="preserve">
    <value>"Empty Rabbit-Mq connection string."</value>
  </data>
  <data name="ErrorInMongoConnectionScheduler" xml:space="preserve">
    <value>Error while getting Mongo connection from scheduler. Retrying the attempt</value>
  </data>
  <data name="ErrorInTsConnectionScheduler" xml:space="preserve">
    <value>Error while getting Time Series connection from scheduler. Retrying the attempt</value>
  </data>
  <data name="ErrorOpeningMongoConnection" xml:space="preserve">
    <value>Error while opening Mongo DB Connection</value>
  </data>
  <data name="ErrorOpeningRedisConnection" xml:space="preserve">
    <value>Failed to connect to the Redis cache.</value>
  </data>
  <data name="ErrorOpeningRmqConnection" xml:space="preserve">
    <value>Error while opening Rabbit Mq Connection</value>
  </data>
  <data name="ErrorOpeningTsConnection" xml:space="preserve">
    <value>Error while opening Time Series Connection</value>
  </data>
  <data name="ErrorResetRedisConnection" xml:space="preserve">
    <value>Error while reconnecting to redis</value>
  </data>
  <data name="FailedRedisConnectionClose" xml:space="preserve">
    <value>Failed to close redis connection</value>
  </data>
  <data name="FailedToCloseConnectionExceptionMsg" xml:space="preserve">
    <value>"Failed to colse connection to Rmq."</value>
  </data>
  <data name="FailedToConnectExceptionMsg" xml:space="preserve">
    <value>"Failed to connect to Broker." +
                                                         "Please check the Data Ingress SDK log file for more details.";</value>
  </data>
  <data name="FailedToDecryptPassword" xml:space="preserve">
    <value>Failed to decrypt password, Please verify service URI and encrypted password</value>
  </data>
  <data name="InternalServerError" xml:space="preserve">
    <value>The Platform Service API server rejected your request. Failed to retrieve/process data.</value>
  </data>
  <data name="InvalidClientCertificate" xml:space="preserve">
    <value>"Unable to load client certificate from User store, please validate client certificate is imported to user store and correct thumbprint is provided" </value>
  </data>
  <data name="InvalidConnectionStringMsg" xml:space="preserve">
    <value>"Invalid connection string."</value>
  </data>
  <data name="InvalidServerCertificate" xml:space="preserve">
    <value>"Failed to validate server certificate, please validate accurate server certificate thumbprint is provided"</value>
  </data>
  <data name="InvalidServiceURI" xml:space="preserve">
    <value>Empty service URI, Please provide valid service URI to decrypt the password</value>
  </data>
  <data name="InvalidSSLArguments" xml:space="preserve">
    <value>"Client/Server certificate thumbprint can not be empty or null for SSL connectivity"</value>
  </data>
  <data name="InvalidTopicExchange" xml:space="preserve">
    <value>"The topic exchange name cannot be an empty string."</value>
  </data>
  <data name="InvalidWebApiConnectionParameter" xml:space="preserve">
    <value>"The web api connection parameter is not valid."</value>
  </data>
  <data name="MongoConnectionBroken" xml:space="preserve">
    <value>Mongo db connection is broken ,Scheduler running to get back the connection</value>
  </data>
  <data name="DeviceAlreadyExistError" xml:space="preserve">
    <value>Device Already Registered on Iothub : {0}</value>
  </data>
  <data name="ErrorDeviceIsOffline" xml:space="preserve">
    <value>Device is offline</value>
  </data>
  <data name="ErrorGettingDeviceState" xml:space="preserve">
    <value>Error while getting device state on Iothub</value>
  </data>
  <data name="ErrorInRemovingDevicesFromIothub" xml:space="preserve">
    <value>Error in removing devices from IoT hub</value>
  </data>
  <data name="ErrorReadingDeviceData" xml:space="preserve">
    <value>Error while reading device data from Mongo store.</value>
  </data>
  <data name="InvalidIotHub" xml:space="preserve">
    <value>Null or Empty connection string for IoT Hub : {0}</value>
  </data>
  <data name="InvalidIotHubs" xml:space="preserve">
    <value>Unable to reach Iot Hubs : {0)</value>
  </data>
  <data name="InvalidUUID" xml:space="preserve">
    <value>Invalid UUID</value>
  </data>
  <data name="IotHubNotRegistered" xml:space="preserve">
    <value>Please register iothubs to Partition</value>
  </data>
  <data name="PartitionNotFound" xml:space="preserve">
    <value>Invalid Partition Id, please provide the correct Partition Id</value>
  </data>
  <data name="UnableToRegisterDeviceToIotHub" xml:space="preserve">
    <value>Error while registering device on IoTHub</value>
  </data>
  <data name="UnexpectedErrorRegisterDevice" xml:space="preserve">
    <value>Unexpected Error occured while registering device on Iothub : {0}</value>
  </data>
  <data name="UnregisteredDevice" xml:space="preserve">
    <value>Device is not registered with System, please check UUID or register your device</value>
  </data>
  <data name="ChannelNotWritable" xml:space="preserve">
    <value>Channel {0} is not writable</value>
  </data>
  <data name="ErrorReadingDeviceProfileData" xml:space="preserve">
    <value>Error while reading device profile data</value>
  </data>
  <data name="InvalidDeviceChannel" xml:space="preserve">
    <value>Invalid channel: {0} for device: {1}</value>
  </data>
  <data name="InvalidValueInTagList" xml:space="preserve">
    <value>One of the values does not match the expected type as defined by the device profile. Tag: {0}, Value: {1}</value>
  </data>
  <data name="UnknownTag" xml:space="preserve">
    <value>{0} Tag does not exist in device profile {1} for device {2}</value>
  </data>
</root>